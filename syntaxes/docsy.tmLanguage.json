{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Docsy",
  "patterns": [{ "include": "#children" }],
  "repository": {
    "children": {
      "patterns": [
        { "include": "#tag" },
        { "include": "#comments" },
        { "include": "#inject" }
      ]
    },
    "comments": {
      "patterns": [
        {
          "begin": "(//)",
          "end": "(?=^)",
          "name": "comment.line.docsy"
        },
        {
          "begin": "(/\\*)",
          "end": "\\*/",
          "name": "comment.block.docsy"
        }
      ]
    },
    "inject": {
      "patterns": [
        {
          "begin": "(\\{)",
          "beginCaptures": {
            "1": { "name": "punctuation.docsy" }
          },
          "end": "(\\})",
          "endCaptures": {
            "1": { "name": "punctuation.docsy" }
          },
          "patterns": [{ "include": "#expression" }, { "include": "#comments" }]
        }
      ]
    },
    "tag": {
      "patterns": [
        {
          "comment": "Tag",
          "name": "tag.docsy",
          "begin": "(<\\|)([a-zA-Z]+(\\.[a-zA-Z0-9]+)*)",
          "beginCaptures": {
            "1": { "name": "punctuation.docsy" },
            "2": { "name": "opening.tag.docsy" }
          },
          "patterns": [
            { "include": "#props" },
            {
              "comment": "Tag content",
              "contentName": "children.tag.docsy",
              "begin": "(>)",
              "beginCaptures": {
                "1": { "name": "punctuation.docsy" }
              },
              "end": "(?=((<)([a-zA-Z]+(\\.[a-zA-Z0-9]+)*))?(\\|>))",
              "patterns": [{ "include": "#children" }]
            }
          ],
          "end": "((<)([a-zA-Z]+(\\.[a-zA-Z0-9]+)*))?(\\|>)",
          "endCaptures": {
            "2": { "name": "punctuation.docsy" },
            "3": { "name": "closing.tag.docsy" },
            "5": { "name": "punctuation.docsy" }
          }
        },
        {
          "comment": "Fragment",
          "name": "fragment.tag.docsy",
          "begin": "(<\\|>)",
          "beginCaptures": {
            "1": { "name": "punctuation.docsy" }
          },
          "end": "(<\\|>)",
          "endCaptures": {
            "1": { "name": "punctuation.docsy" }
          },
          "patterns": [{ "include": "#children" }]
        },
        {
          "comment": "Raw Tag",
          "name": "raw.tag.docsy",
          "begin": "(<#)([a-zA-Z]+(\\.[a-zA-Z0-9]+)*)",
          "beginCaptures": {
            "1": { "name": "punctuation.docsy" },
            "2": { "name": "opening.tag.docsy" }
          },
          "patterns": [
            { "include": "#props" },
            {
              "comment": "Tag content",
              "contentName": "raw.docsy",
              "begin": "(>)",
              "beginCaptures": {
                "1": { "name": "punctuation.docsy" }
              },
              "end": "(?=((<)([a-zA-Z]+(\\.[a-zA-Z0-9]+)*))?(\\#>))",
              "patterns": [
                {
                  "comment": "Escape in Raw",
                  "name": "fragment.tag.docsy",
                  "begin": "(<#>)",
                  "beginCaptures": {
                    "1": { "name": "punctuation.docsy" }
                  },
                  "end": "(<#>)",
                  "endCaptures": {
                    "1": { "name": "punctuation.docsy" }
                  },
                  "patterns": [{ "include": "#children" }]
                }
              ]
            }
          ],
          "end": "((<)([a-zA-Z]+(\\.[a-zA-Z0-9]+)*))?(\\#>)",
          "endCaptures": {
            "2": { "name": "punctuation.docsy" },
            "3": { "name": "closing.tag.docsy" },
            "5": { "name": "punctuation.docsy" }
          }
        },
        {
          "comment": "Raw Fragment",
          "name": "fragment.tag.docsy",
          "contentName": "raw.docsy",
          "begin": "(<#>)",
          "beginCaptures": {
            "1": { "name": "punctuation.docsy" }
          },
          "end": "(<#>)",
          "endCaptures": {
            "1": { "name": "punctuation.docsy" }
          }
        }
      ]
    },
    "props": {
      "patterns": [
        { "include": "#comments" },
        {
          "comment": "Prop",
          "name": "meta.tag.attributes.docsy",
          "begin": "([ \\t\\n\\r]+|^)([a-zA-Z_][A-Za-z0-9_$]*)(=)(?!(>| |\\|>|$))",
          "beginCaptures": {
            "2": { "name": "entity.other.attribute-name.docsy" },
            "3": { "name": "meta.tag.docsy" },
            "4": { "name": "keyword.operator.assignment.docsy" }
          },
          "patterns": [{ "include": "#expression" }],
          "end": "(?=(>| |\\|>))"
        },
        {
          "comment": "No value prop",
          "name": "meta.tag.attributes.docsy",
          "match": "([ \\t\\n\\r]+|^)([a-zA-Z_][A-Za-z0-9_$]*)(?=(>| |\\|>|$))",
          "captures": {
            "2": { "name": "entity.other.attribute-name.docsy" }
          }
        }
      ]
    },
    "expression": {
      "patterns": [
        { "include": "#string" },
        { "include": "#object" },
        { "include": "#array" },
        { "include": "#number" },
        { "include": "#keyword" },
        { "include": "#parenthesis" },
        { "include": "#tag" },
        { "include": "#identifier" }
      ]
    },
    "keyword": {
      "name": "keyword.docsy",
      "patterns": [
        { "match": "true", "name": "constant.language.boolean.true.docsy" },
        { "match": "false", "name": "constant.language.boolean.false.docsy" },
        { "match": "null", "name": "constant.language.null.docsy" },
        { "match": "undefined", "name": "constant.language.undefined.docsy" }
      ]
    },
    "identifier": {
      "name": "variable.docsy",
      "match": "[A-Za-z][A-Za-z0-9_$]*"
    },
    "number": {
      "name": "number.docsy",
      "patterns": [
        {
          "match": "(-?)([\\d]+)",
          "captures": {
            "1": { "name": "keyword.operator.arithmetic.docsy" },
            "2": { "name": "constant.numeric.decimal" }
          }
        },
        {
          "match": "(-?)([\\d]+)(\\.)([\\d]+)",
          "captures": {
            "1": { "name": "keyword.operator.arithmetic.docsy" },
            "2": { "name": "constant.numeric.decimal" },
            "3": { "name": "meta.delimiter.decimal.period" },
            "4": { "name": "constant.numeric.decimal" }
          }
        }
      ]
    },
    "string": {
      "patterns": [
        {
          "comment": "Template string",
          "name": "string.docsy",
          "begin": "(`)",
          "beginCaptures": {
            "1": { "name": "punctuation.definition.string.begin.docsy" }
          },
          "end": "(`)",
          "endCaptures": {
            "1": { "name": "punctuation.definition.string.end.docsy" }
          },
          "patterns": [
            {
              "match": "(\\\\.)",
              "name": "constant.character.escape.docsy"
            }
          ]
        },
        {
          "name": "string.docsy",
          "begin": "(\")",
          "beginCaptures": {
            "1": { "name": "punctuation.definition.string.begin.docsy" }
          },
          "end": "(\"|$)",
          "endCaptures": {
            "1": { "name": "punctuation.definition.string.end.docsy" }
          },
          "patterns": [
            {
              "match": "(\\\\.)",
              "name": "constant.character.escape.docsy"
            }
          ]
        },
        {
          "name": "string.docsy",
          "begin": "(')",
          "beginCaptures": {
            "1": { "name": "punctuation.definition.string.begin.docsy" }
          },
          "end": "('|$)",
          "endCaptures": {
            "1": { "name": "punctuation.definition.string.end.docsy" }
          },
          "patterns": [
            {
              "match": "(\\\\.)",
              "name": "constant.character.escape.docsy"
            }
          ]
        }
      ]
    },
    "parenthesis": {
      "name": "parenthesis.docsy",
      "begin": "\\(",
      "end": "\\)",
      "patterns": [{ "include": "#expression" }]
    },
    "object": {
      "name": "meta.object-literal.docsy",
      "begin": "\\{",
      "end": "\\}",
      "patterns": [{ "include": "#objectItem" }]
    },
    "objectItem": {
      "patterns": [
        { "match": ",", "name": "punctuation.separator.key-value.docsy" },
        {
          "begin": "([ \\t\\n\\r]+)([A-Za-z][A-Za-z0-9_$]*):",
          "end": "(?=(\\}|,))",
          "beginCaptures": {
            "2": { "name": "meta.object-literal.key.docsy" }
          },
          "patterns": [{ "include": "#expression" }]
        },
        {
          "begin": "([ \\t\\n\\r]+)('[^']+'):",
          "beginCaptures": {
            "2": { "name": "meta.object-literal.key.docsy" }
          },
          "end": "(?=(\\}|,))",
          "patterns": [{ "include": "#expression" }]
        },
        {
          "begin": "([ \\t\\n\\r]+)(\"[^\"]+\"):",
          "beginCaptures": {
            "2": { "name": "meta.object-literal.key.docsy" }
          },
          "end": "(?=(\\}|,))",
          "patterns": [{ "include": "#expression" }]
        },
        {
          "name": "computed.docsy",
          "begin": "([ \\t\\r]+)(\\[)",
          "beginCaptures": {
            "2": { "name": "meta.object-literal.key.docsy" }
          },
          "end": "(?=(\\}|,))",
          "patterns": [{ "include": "#computed" }]
        },
        {
          "name": "spread.docsy",
          "begin": "([ \\t\\r]+)(\\.\\.\\.)",
          "beginCaptures": {
            "2": { "name": "meta.object-literal.key.docsy" }
          },
          "end": "(?=(\\}|,))",
          "patterns": [{ "include": "#expression" }]
        }
      ]
    },
    "computed": {
      "patterns": [
        {
          "begin": "(\\]:( \t\n)*)",
          "beginCaptures": {
            "1": { "name": "meta.object-literal.key.docsy" }
          },
          "end": "(?=(\\}|,))",
          "patterns": [{ "include": "#expression" }]
        },
        { "include": "#expression" }
      ]
    },
    "array": {
      "name": "array.docsy",
      "begin": "\\[",
      "end": "\\]",
      "patterns": [
        { "match": ",", "name": "meta.tag.docsy" },
        { "include": "#expression" }
      ]
    }
  },
  "scopeName": "source.docsy"
}
